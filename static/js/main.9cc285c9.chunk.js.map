{"version":3,"sources":["components/Header/Header.module.css","components/CharacterItem/CharacterItem.module.css","components/MainPage/MainPage.module.css","components/FavoriteCharacters/FavoriteCharacters.module.css","components/CharacterItem/CharacterItem.jsx","redux/character-reducer.js","components/FavoriteCharacters/FavoriteCharacters.jsx","components/FavoriteCharacters/FavoriteCharactersContainer.jsx","components/Header/Header.jsx","components/MainPage/MainPage.jsx","components/MainPage/MainPageAPIComponent.jsx","components/MainPage/MainPageContainer.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["module","exports","CharacterItem","props","className","styles","character_card","character_img","src","imgUrl","character_info","name","isFavorite","onClick","deleteFromFavorite","addToFavorite","ADD_TO_FAVORITE","DELETE_FROM_FAVORITE","SET_CHARACTERS","SET_CURRNET_PAGE","SET_TOTAL_CHARACTERS_COUNT","initialState","characters","favoriteCharacters","pageSize","totalCharactersCount","currentPage","addToFavoriteActionCreator","character","type","deleteFromFavoriteActionCreator","characterReducer","state","action","stateCopy","pop","FavoriteCharacters","favoriteCharactersElements","map","card","character_list","FavoriteCharactersContainer","connect","dispatch","Header","header","menu","exact","to","menuLink","activeClassName","activeLink","MainPage","pagesCount","Math","ceil","pages","i","push","pagination","p","active","onPageChanged","MainPageAPIComponent","pageNumber","setCurrentPage","axios","get","then","response","getUrlCharacter","lastStr","data","results","url","slice","replace","modResponse","newResponse","charactersInPage","length","setCharacters","this","setTotalCharactersCount","count","getCharacters","React","Component","MainPageContainer","setCharactersActionCreator","setCurrentPageActionCreator","setTotalCharactersCountActionCreator","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9cc285c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1lhMN\",\"menu\":\"Header_menu__hs1d3\",\"menuLink\":\"Header_menuLink__1xUdx\",\"activeLink\":\"Header_activeLink__2l0IM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character_card\":\"CharacterItem_character_card__1O1BC\",\"character_img\":\"CharacterItem_character_img__3OcFf\",\"character_info\":\"CharacterItem_character_info__3Y7S4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character_list\":\"MainPage_character_list__3lK4F\",\"pagination\":\"MainPage_pagination__YZHOH\",\"active\":\"MainPage_active__2Mnqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character_list\":\"FavoriteCharacters_character_list__19krI\",\"character_card\":\"FavoriteCharacters_character_card__WIUYE\",\"character_img\":\"FavoriteCharacters_character_img__1JzHv\",\"character_info\":\"FavoriteCharacters_character_info__1EGCW\"};","import styles from './CharacterItem.module.css'\r\n\r\nconst CharacterItem = (props) => {\r\n    debugger\r\n    return (\r\n        <div className={styles.character_card}>\r\n            <div>\r\n                <img className={styles.character_img} src={props.imgUrl} />\r\n            </div>\r\n            <div className={styles.character_info}>\r\n                <div>\r\n                    <span>{props.name}</span>\r\n                </div>\r\n                <div>\r\n                    {props.isFavorite ?\r\n                        <button onClick={() => { props.deleteFromFavorite() }}>\r\n                            Х\r\n                    </button> :\r\n                    <button onClick={() => { props.addToFavorite(props.name, props.imgUrl, props.isFavorite) }}>\r\n                            ❤\r\n                    </button>\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterItem;","const ADD_TO_FAVORITE = 'ADD-TO-FAVORITE';\r\nconst DELETE_FROM_FAVORITE = 'DELETE-FROM-FAVORITE';\r\nconst SET_CHARACTERS = 'SET-CHARACTERS';\r\nconst SET_CURRNET_PAGE = 'SET-CURRNET-PAGE';\r\nconst SET_TOTAL_CHARACTERS_COUNT = 'SET_TOTAL_CHARACTERS_COUNT';\r\n\r\nlet initialState = {\r\n    characters: [],\r\n    favoriteCharacters: [\r\n        // { 'name': 'luke', favorite: true },\r\n    ],\r\n    pageSize: 10,\r\n    totalCharactersCount: 0,\r\n    currentPage: 1\r\n}\r\n\r\nconst characterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_FAVORITE: {\r\n            debugger\r\n            return {...state, favoriteCharacters: [...state.favoriteCharacters, {name: action.character, imgUrl: action.imgUrl, isFavorite: true}]}\r\n        }\r\n        case DELETE_FROM_FAVORITE: {\r\n            let stateCopy = { ...state };\r\n            stateCopy.favoriteCharacters = [...state.favoriteCharacters]\r\n            stateCopy.favoriteCharacters.pop();\r\n            return stateCopy;\r\n        }\r\n        case SET_CHARACTERS:\r\n            return { ...state, characters: action.characters }\r\n        case SET_CURRNET_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_CHARACTERS_COUNT:\r\n            return { ...state, totalCharactersCount: action.totalCharactersCount }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addToFavoriteActionCreator = (character, imgUrl, isFavorite) => ({ type: ADD_TO_FAVORITE, character, imgUrl, isFavorite });\r\nexport const deleteFromFavoriteActionCreator = () => ({ type: DELETE_FROM_FAVORITE });\r\nexport const setCharactersActionCreator = (characters) => ({ type: SET_CHARACTERS, characters });\r\nexport const setCurrentPageActionCreator = (currentPage) => ({ type: SET_CURRNET_PAGE, currentPage });\r\nexport const setTotalCharactersCountActionCreator = (totalCharactersCount) => ({ type: SET_TOTAL_CHARACTERS_COUNT, totalCharactersCount });\r\n\r\n\r\nexport default characterReducer;","import CharacterItem from '../CharacterItem/CharacterItem';\r\nimport styles from './FavoriteCharacters.module.css';\r\n\r\nconst FavoriteCharacters = (props) => {\r\n    let favoriteCharactersElements = props.favoriteCharacters\r\n        .map(card => <CharacterItem name={card.name} imgUrl={card.imgUrl} isFavorite={card.isFavorite} deleteFromFavorite={props.deleteFromFavorite}/>);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Мои любимые персы</h1>\r\n            <div className={styles.character_list}>\r\n                {favoriteCharactersElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoriteCharacters;","import CharacterItem from '../CharacterItem/CharacterItem';\r\nimport { addToFavoriteActionCreator, deleteFromFavoriteActionCreator } from '../../redux/character-reducer';\r\nimport { connect } from 'react-redux';\r\nimport FavoriteCharacters from './FavoriteCharacters';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        favoriteCharacters: state.favoriteCharacters.favoriteCharacters\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToFavorite: () => {\r\n            dispatch(addToFavoriteActionCreator())\r\n        } ,\r\n        deleteFromFavorite: () => {\r\n            dispatch(deleteFromFavoriteActionCreator())\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst FavoriteCharactersContainer = connect(mapStateToProps, mapDispatchToProps) (FavoriteCharacters);\r\n\r\nexport default FavoriteCharactersContainer;","import { NavLink } from 'react-router-dom';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={styles.header}>\r\n            <ul className={styles.menu}>\r\n                {/* <li><a href=\"/main\" className={styles.menuLink}>Главная</a></li> */}\r\n                <li><NavLink exact to=\"/\" className={styles.menuLink} activeClassName={styles.activeLink}>Главная</NavLink></li>\r\n                <li><NavLink to=\"/favorites\" className={styles.menuLink} activeClassName={styles.activeLink}>Любимые герои</NavLink></li> \r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import styles from './MainPage.module.css';\r\nimport CharacterItem from '../CharacterItem/CharacterItem';\r\n\r\nconst MainPage = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalCharactersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n\r\n        <h1>Персонажи Звездных Войн</h1>\r\n\r\n        <div className={styles.pagination}>\r\n            {pages.map(p => {\r\n                return <a className={props.currentPage === p && styles.active}\r\n                    onClick={() => { props.onPageChanged(p) }}>{p}</a>\r\n            })}\r\n        </div>\r\n\r\n        <div className={styles.character_list}>\r\n            {/* {this.charactersElements} */}\r\n            {   props.characters.map(card => <CharacterItem name={card.name} imgUrl={card.imgUrl} addToFavorite={props.addToFavorite}\r\n            isFavorite={props.isFavorite}/>)}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default MainPage;","import axios from 'axios';\r\nimport React from 'react';\r\nimport MainPage from './MainPage';\r\n\r\n\r\nclass MainPageAPIComponent extends React.Component {\r\n\r\n    \r\n    componentDidMount() {\r\n        if (this.props.characters.length === 0) {\r\n            axios.get(`https://swapi.dev/api/people/?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n                .then(response => {\r\n                    let getUrlCharacter = (i) => {\r\n                        let str = response.data.results[i].url;\r\n                        let re = 'http://swapi.dev/api/people/';\r\n                        let midStr = str.slice(0, -1);\r\n                        let lastStr = midStr.replace(re, 'https://starwars-visualguide.com/assets/img/characters/');\r\n                        let newStr = `${lastStr}.jpg`;\r\n                        return newStr;\r\n                    }\r\n                \r\n                    let newResponse = () => {\r\n                        let newResponse = { ...response }\r\n                        let charactersInPage = newResponse.data.results.length\r\n                        for (let i = 0; i < charactersInPage; i++) {\r\n                            let imgUrl = getUrlCharacter(i);\r\n                            newResponse.data.results[i].imgUrl = imgUrl;\r\n                            newResponse.data.results[i].isFavorite = false;\r\n                        }\r\n                        return newResponse;\r\n                \r\n                    }\r\n                    let modResponse = newResponse();\r\n                    this.props.setCharacters(modResponse.data.results);\r\n                    this.props.setTotalCharactersCount(response.data.count);\r\n                })\r\n        }\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        // axios.get(`https://swapi.dev/api/people/?page=${this.props.pageNumber}&count=${this.props.pageSize}`)\r\n        axios.get(`https://swapi.dev/api/people/?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                let getUrlCharacter = (i) => {\r\n                    let str = response.data.results[i].url;\r\n                    let re = 'http://swapi.dev/api/people/';\r\n                    let midStr = str.slice(0, -1);\r\n                    let lastStr = midStr.replace(re, 'https://starwars-visualguide.com/assets/img/characters/');\r\n                    let newStr = `${lastStr}.jpg`;\r\n                    return newStr;\r\n                }\r\n            \r\n                let newResponse = () => {\r\n                    let newResponse = { ...response }\r\n                    let charactersInPage = newResponse.data.results.length\r\n                    for (let i = 0; i < charactersInPage; i++) {\r\n                        let imgUrl = getUrlCharacter(i);\r\n                        newResponse.data.results[i].imgUrl = imgUrl\r\n                        newResponse.data.results[i].isFavorite = false;\r\n                    }\r\n                    return newResponse;\r\n            \r\n                }\r\n                let modResponse = newResponse();\r\n                this.props.setCharacters(modResponse.data.results);\r\n                // this.props.setCharacters(response.data.results);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MainPage\r\n                onPageChanged={this.onPageChanged}\r\n                getCharacters={this.props.getCharacters}\r\n                characters={this.props.characters}\r\n                currentPage={this.props.currentPage}\r\n                totalCharactersCount={this.props.totalCharactersCount}\r\n                pageSize={this.props.pageSize}\r\n                addToFavorite={this.props.addToFavorite}\r\n                deleteFromFavorite={this.props.deleteFromFavorite}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPageAPIComponent;","import { connect } from 'react-redux';\r\nimport { addToFavoriteActionCreator, deleteFromFavoriteActionCreator, setCharactersActionCreator, setCurrentPageActionCreator, setTotalCharactersCountActionCreator } from '../../redux/character-reducer';\r\nimport MainPageAPIComponent from './MainPageAPIComponent';\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        characters: state.favoriteCharacters.characters,\r\n        pageSize: state.favoriteCharacters.pageSize,\r\n        totalCharactersCount: state.favoriteCharacters.totalCharactersCount,\r\n        currentPage: state.favoriteCharacters.currentPage,\r\n        isFavorite: state.favoriteCharacters.isFavorite\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToFavorite: (name, imgUrl) => {\r\n            dispatch(addToFavoriteActionCreator(name, imgUrl))\r\n        } ,\r\n        deleteFromFavorite: () => {\r\n            dispatch(deleteFromFavoriteActionCreator())\r\n        },\r\n        setCharacters: (characters) => {\r\n            dispatch(setCharactersActionCreator(characters))\r\n        },\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageActionCreator(currentPage))\r\n        },\r\n        setTotalCharactersCount: (totalCharactersCount) => {\r\n            dispatch(setTotalCharactersCountActionCreator(totalCharactersCount))\r\n        }\r\n    }\r\n}\r\n\r\nconst MainPageContainer = connect(mapStateToProps, mapDispatchToProps) (MainPageAPIComponent);\r\n\r\nexport default MainPageContainer;","import { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport FavoriteCharactersContainer from './components/FavoriteCharacters/FavoriteCharactersContainer';\nimport Header from './components/Header/Header'\nimport MainPageContainer from './components/MainPage/MainPageContainer';\n\nconst App = (props) => {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <div className=\"content-wrapper\">\n          <Route exact path='/'\n              render={() => <MainPageContainer />} />\n\n          <Route exact path='/favorites'\n            render={() => <FavoriteCharactersContainer />} />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\r\nimport characterReducer from \"./character-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    favoriteCharacters: characterReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}