{"version":3,"sources":["components/Header/Header.module.css","components/CharacterItem/CharacterItem.module.css","components/MainPage/MainPage.module.css","components/FavoriteCharacters/FavoriteCharacters.module.css","components/MainPage/CharactersSearchForm.module.css","components/CharacterItem/CharacterItem.jsx","redux/character-reducer.js","components/FavoriteCharacters/FavoriteCharacters.jsx","components/FavoriteCharacters/FavoriteCharactersContainer.jsx","components/Header/Header.jsx","components/MainPage/CharactersSearchForm.jsx","components/MainPage/MainPage.jsx","components/MainPage/MainPageAPIComponent.jsx","components/MainPage/MainPageContainer.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["module","exports","CharacterItem","props","className","styles","character_card","character_img","src","imgUrl","character_info","name","favButton","isFavorite","type","onClick","addToFavorite","ADD_TO_FAVORITE","DELETE_FROM_FAVORITE","SET_CHARACTERS","SET_FAVORITE_CHARACTERS","SET_CURRNET_PAGE","SET_TOTAL_CHARACTERS_COUNT","SET_FILTER","initialState","characters","favoriteCharacters","pageSize","totalCharactersCount","currentPage","filter","term","addToFavoriteActionCreator","character","deleteFromFavoriteActionCreator","setFavoriteCharactersActionCreator","characterReducer","state","action","stateCopy","FavoriteCharacters","localStorageFef","localStorage","getItem","localStorageFefOBJ","JSON","parse","this","setFavCharacters","favoriteCharactersElements","map","card","deleteFromFavorite","buttonContainer","clear","character_list","React","Component","FavoriteCharactersContainer","connect","dispatch","Header","header","menu","exact","to","menuLink","activeClassName","activeLink","—ÅharactersSearchFormValidate","values","CharactersSearchForm","inputForm","initialValues","validate","onSubmit","setSubmitting","onFilterChanged","isSubmitting","placeholder","disabled","MainPage","pagesCount","Math","ceil","pages","i","push","pagination","p","active","onPageChanged","MainPageAPIComponent","pageNumber","setCurrentPage","axios","get","then","response","modResponse","newResponse","setCharacters","data","results","setFilter","lastStr","url","slice","replace","charactersInPage","length","getUrlCharacter","setTotalCharactersCount","count","prevProps","fav","setItem","stringify","getCharacters","MainPageContainer","setCharactersActionCreator","setCurrentPageActionCreator","setTotalCharactersCountActionCreator","setFilterActionCreator","App","basename","process","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.42f123a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1lhMN\",\"menu\":\"Header_menu__hs1d3\",\"menuLink\":\"Header_menuLink__1xUdx\",\"activeLink\":\"Header_activeLink__2l0IM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character_card\":\"CharacterItem_character_card__1O1BC\",\"character_img\":\"CharacterItem_character_img__3OcFf\",\"character_info\":\"CharacterItem_character_info__3Y7S4\",\"favButton\":\"CharacterItem_favButton__1gs4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character_list\":\"MainPage_character_list__3lK4F\",\"pagination\":\"MainPage_pagination__YZHOH\",\"active\":\"MainPage_active__2Mnqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character_list\":\"FavoriteCharacters_character_list__19krI\",\"character_card\":\"FavoriteCharacters_character_card__WIUYE\",\"character_img\":\"FavoriteCharacters_character_img__1JzHv\",\"character_info\":\"FavoriteCharacters_character_info__1EGCW\",\"buttonContainer\":\"FavoriteCharacters_buttonContainer__1r3WS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"CharactersSearchForm_inputForm__1Chi3\"};","import styles from './CharacterItem.module.css';\r\n\r\nconst CharacterItem = (props) => {\r\n    \r\n    return (\r\n        <div className={styles.character_card}>\r\n            <div>\r\n                <img className={styles.character_img} src={props.imgUrl} />\r\n            </div>\r\n            <div className={styles.character_info}>\r\n                <div>\r\n                    <span>{props.name}</span>\r\n                </div>\r\n                <div className={styles.favButton}>\r\n                    {props.isFavorite ?\r\n                    //     <button onClick={() => { props.deleteFromFavorite() }}>\r\n                    //         –•\r\n                    // </button> \r\n                    <div></div>:\r\n                    <button type='submit'onClick={() => {props.addToFavorite(props.name, props.imgUrl, props.isFavorite)}}>\r\n                            ‚ù§\r\n                    </button>\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterItem;","const ADD_TO_FAVORITE = 'ADD-TO-FAVORITE';\r\nconst DELETE_FROM_FAVORITE = 'DELETE-FROM-FAVORITE';\r\nconst SET_CHARACTERS = 'SET-CHARACTERS';\r\nconst SET_FAVORITE_CHARACTERS = 'SET-FAVORITE-CHARACTERS';\r\nconst SET_CURRNET_PAGE = 'SET-CURRNET-PAGE';\r\nconst SET_TOTAL_CHARACTERS_COUNT = 'SET_TOTAL_CHARACTERS_COUNT';\r\nconst SET_FILTER = 'SET-FILTER';\r\n\r\nlet initialState = {\r\n    characters: [],\r\n    favoriteCharacters: [\r\n        // { 'name': 'luke', favorite: true },\r\n    ],\r\n    pageSize: 10,\r\n    totalCharactersCount: 0,\r\n    currentPage: 1,\r\n    filter: {\r\n        term: ''\r\n    }\r\n}\r\n\r\nconst characterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_FAVORITE: {\r\n            return {...state, favoriteCharacters: [...state.favoriteCharacters, {name: action.character, imgUrl: action.imgUrl, isFavorite: true}]}\r\n        }\r\n        case DELETE_FROM_FAVORITE: {\r\n            let stateCopy = { ...state };\r\n            stateCopy.favoriteCharacters = [...state.favoriteCharacters]\r\n            // stateCopy.favoriteCharacters.pop();\r\n            stateCopy.favoriteCharacters = [];\r\n            return stateCopy;\r\n        }\r\n        case SET_CHARACTERS:\r\n            return { ...state, characters: action.characters, term: action.term }\r\n        case SET_FAVORITE_CHARACTERS:\r\n            return { ...state, favoriteCharacters: action.favoriteCharacters, term: action.term }\r\n        case SET_CURRNET_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_CHARACTERS_COUNT:\r\n            return { ...state, totalCharactersCount: action.totalCharactersCount }\r\n        case SET_FILTER: {\r\n            return {...state, filter: {term: action.filter.term}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addToFavoriteActionCreator = (character, imgUrl, isFavorite) => ({ type: ADD_TO_FAVORITE, character, imgUrl, isFavorite });\r\nexport const deleteFromFavoriteActionCreator = () => ({ type: DELETE_FROM_FAVORITE });\r\nexport const setCharactersActionCreator = (characters) => ({ type: SET_CHARACTERS, characters });\r\nexport const setFavoriteCharactersActionCreator = (favoriteCharacters) => ({ type: SET_FAVORITE_CHARACTERS, favoriteCharacters });\r\nexport const setCurrentPageActionCreator = (currentPage) => ({ type: SET_CURRNET_PAGE, currentPage });\r\nexport const setFilterActionCreator = (filter) => ({ type: SET_FILTER, filter });\r\nexport const setTotalCharactersCountActionCreator = (totalCharactersCount) => ({ type: SET_TOTAL_CHARACTERS_COUNT, totalCharactersCount });\r\n\r\n\r\nexport default characterReducer;","import CharacterItem from '../CharacterItem/CharacterItem';\r\nimport styles from './FavoriteCharacters.module.css';\r\nimport React from 'react';\r\n\r\nclass FavoriteCharacters extends React.Component {\r\n    componentDidMount() {\r\n        let localStorageFef = localStorage.getItem('favorite character');\r\n        let localStorageFefOBJ = JSON.parse(localStorageFef);\r\n        if (localStorageFefOBJ) {\r\n            this.props = { ...this.props, favoriteCharacters: localStorageFefOBJ };\r\n            this.props.setFavCharacters(localStorageFefOBJ);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let favoriteCharactersElements = this.props.favoriteCharacters\r\n        .map(card => <CharacterItem name={card.name} imgUrl={card.imgUrl} isFavorite={card.isFavorite} deleteFromFavorite={this.props.deleteFromFavorite} />);\r\n\r\n        return (\r\n            <div>\r\n            <h1>–ú–æ–∏ –ª—é–±–∏–º—ã–µ –ø–µ—Ä—Å—ã</h1>\r\n            <div className={styles.buttonContainer}>\r\n                <button onClick={() => {\r\n                    this.props.deleteFromFavorite();\r\n                    localStorage.clear();\r\n                    debugger }}>\r\n                    –£–¥–∞–ª–∏—Ç—å –≤—Å–µ—Ö\r\n                </button>\r\n            </div>\r\n\r\n            <div className={styles.character_list}>\r\n                {favoriteCharactersElements}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default FavoriteCharacters;","import CharacterItem from '../CharacterItem/CharacterItem';\r\nimport { addToFavoriteActionCreator, deleteFromFavoriteActionCreator, setFavoriteCharactersActionCreator } from '../../redux/character-reducer';\r\nimport { connect } from 'react-redux';\r\nimport FavoriteCharacters from './FavoriteCharacters';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        favoriteCharacters: state.favoriteCharacters.favoriteCharacters\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToFavorite: () => {\r\n            dispatch(addToFavoriteActionCreator())\r\n        } ,\r\n        deleteFromFavorite: () => {\r\n            dispatch(deleteFromFavoriteActionCreator())\r\n        },\r\n        setFavCharacters: (favoriteCharacters) => {\r\n            dispatch(setFavoriteCharactersActionCreator(favoriteCharacters))\r\n        }\r\n    }\r\n}\r\n\r\nconst FavoriteCharactersContainer = connect(mapStateToProps, mapDispatchToProps) (FavoriteCharacters);\r\n\r\nexport default FavoriteCharactersContainer;","import { NavLink } from 'react-router-dom';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={styles.header}>\r\n            <ul className={styles.menu}>\r\n                {/* <li><a href=\"/main\" className={styles.menuLink}>–ì–ª–∞–≤–Ω–∞—è</a></li> */}\r\n                <li><NavLink exact to=\"/\" className={styles.menuLink} activeClassName={styles.activeLink}>–ì–ª–∞–≤–Ω–∞—è</NavLink></li>\r\n                <li><NavLink to=\"/favorites\" className={styles.menuLink} activeClassName={styles.activeLink}>–õ—é–±–∏–º—ã–µ –≥–µ—Ä–æ–∏</NavLink></li> \r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import { Formik, Form, Field } from 'formik';\r\nimport styles from './CharactersSearchForm.module.css';\r\n\r\nconst —ÅharactersSearchFormValidate = values => {\r\n    const errors = {};\r\n    return errors;\r\n  }\r\n\r\nconst CharactersSearchForm = (props) => {\r\n\r\n  const submit = (values, { setSubmitting }) => {\r\n    props.onFilterChanged(values);\r\n    setSubmitting(false);\r\n  }\r\n\r\n  return <div className={styles.inputForm}>\r\n\r\n    <Formik \r\n      initialValues={{ term: '' }}\r\n      validate={—ÅharactersSearchFormValidate}\r\n      onSubmit={submit}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          <Field type=\"text\" name=\"term\" placeholder='–ù–∞–π—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞'/>\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            –ü–æ–∏—Å–∫\r\n           </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n\r\n  </div>\r\n}\r\n\r\nexport default CharactersSearchForm;","import styles from './MainPage.module.css';\r\nimport CharacterItem from '../CharacterItem/CharacterItem';\r\nimport CharactersSearchForm from './CharactersSearchForm';\r\n\r\nconst MainPage = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalCharactersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n\r\n        <h1>–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –ó–≤–µ–∑–¥–Ω—ã—Ö –í–æ–π–Ω</h1>\r\n        <CharactersSearchForm onFilterChanged={props.onFilterChanged} />\r\n        <div className={styles.pagination}>\r\n            {pages.map(p => {\r\n                return <a className={props.currentPage === p && styles.active}\r\n                    onClick={() => { props.onPageChanged(p) }}>{p}</a>\r\n            })}\r\n        </div>\r\n\r\n        <div className={styles.character_list}>\r\n            {/* {this.charactersElements} */}\r\n            {   props.characters.map(card => <CharacterItem name={card.name} imgUrl={card.imgUrl} addToFavorite={props.addToFavorite}\r\n            isFavorite={props.isFavorite}/>)}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default MainPage;","import axios from 'axios';\r\nimport React from 'react';\r\nimport MainPage from './MainPage';\r\n\r\n\r\nclass MainPageAPIComponent extends React.Component {\r\n\r\n    getUrlCharacter(response, i) {\r\n        let str = response.data.results[i].url;\r\n        let re = 'http://swapi.dev/api/people/';\r\n        let midStr = str.slice(0, -1);\r\n        let lastStr = midStr.replace(re, 'https://starwars-visualguide.com/assets/img/characters/');\r\n        let newStr = `${lastStr}.jpg`;\r\n        return newStr;\r\n    }\r\n\r\n    newResponse(response) {\r\n        let newResponse = { ...response }\r\n        let charactersInPage = newResponse.data.results.length\r\n        for (let i = 0; i < charactersInPage; i++) {\r\n            let imgUrl = this.getUrlCharacter(newResponse, i);\r\n            newResponse.data.results[i].imgUrl = imgUrl;\r\n            newResponse.data.results[i].isFavorite = false;\r\n        }\r\n        return newResponse;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.characters.length === 0) {\r\n            axios.get(`https://swapi.dev/api/people/?search=${this.props.term}&page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n                .then(response => {\r\n                    let modResponse = this.newResponse(response);\r\n                    let localStorageFef = localStorage.getItem('favorite character');\r\n                    let localStorageFefOBJ = JSON.parse(localStorageFef);\r\n                    // if (localStorageFefOBJ.length > 0) {\r\n                    if (localStorageFefOBJ) {\r\n                        // this.props = {...this.props,  favoriteCharacters: localStorageFefOBJ};\r\n                        this.props.setFavCharacters(localStorageFefOBJ)\r\n                    }\r\n                    this.props.setCharacters(modResponse.data.results);\r\n                    this.props.setTotalCharactersCount(response.data.count);\r\n\r\n                })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let fav  = this.props;\r\n        localStorage.setItem('favorite character', JSON.stringify((fav.favoriteCharacters)));\r\n        let localStorageFef= localStorage.getItem('favorite character');\r\n        let localStorageFefOBJ = JSON.parse(localStorageFef);\r\n        // if (localStorageFefOBJ.length > 0) {\r\n        if (localStorageFefOBJ) {\r\n            this.props = {...this.props,  favoriteCharacters: localStorageFefOBJ};\r\n        }\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://swapi.dev/api/people/?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                let modResponse = this.newResponse(response);\r\n                this.props.setCharacters(modResponse.data.results, '');\r\n            })\r\n    }\r\n\r\n    onFilterChanged = (filter) => {\r\n        this.props.setFilter(filter);\r\n        axios.get(`https://swapi.dev/api/people/?search=${this.props.term}`)\r\n            .then(response => {\r\n                let modResponse = this.newResponse(response);\r\n                this.props.setCharacters(modResponse.data.results);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MainPage\r\n                onPageChanged={this.onPageChanged}\r\n                getCharacters={this.props.getCharacters}\r\n                characters={this.props.characters}\r\n                currentPage={this.props.currentPage}\r\n                totalCharactersCount={this.props.totalCharactersCount}\r\n                pageSize={this.props.pageSize}\r\n                addToFavorite={this.props.addToFavorite}\r\n                deleteFromFavorite={this.props.deleteFromFavorite}\r\n                onFilterChanged={this.onFilterChanged}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPageAPIComponent;","import { connect } from 'react-redux';\r\nimport { addToFavoriteActionCreator, deleteFromFavoriteActionCreator, setCharactersActionCreator, setCurrentPageActionCreator, setTotalCharactersCountActionCreator, setFilterActionCreator, setFavoriteCharactersActionCreator } from '../../redux/character-reducer';\r\nimport MainPageAPIComponent from './MainPageAPIComponent';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        characters: state.favoriteCharacters.characters,\r\n        favoriteCharacters: state.favoriteCharacters.favoriteCharacters,\r\n        pageSize: state.favoriteCharacters.pageSize,\r\n        totalCharactersCount: state.favoriteCharacters.totalCharactersCount,\r\n        currentPage: state.favoriteCharacters.currentPage,\r\n        isFavorite: state.favoriteCharacters.isFavorite,\r\n        term: state.favoriteCharacters.filter.term\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToFavorite: (name, imgUrl) => {\r\n            dispatch(addToFavoriteActionCreator(name, imgUrl))\r\n        } ,\r\n        deleteFromFavorite: () => {\r\n            dispatch(deleteFromFavoriteActionCreator())\r\n        },\r\n        setCharacters: (characters) => {\r\n            dispatch(setCharactersActionCreator(characters))\r\n        },\r\n        setFavCharacters: (favoriteCharacters) => {\r\n            dispatch(setFavoriteCharactersActionCreator(favoriteCharacters))\r\n        },\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageActionCreator(currentPage))\r\n        },\r\n        setTotalCharactersCount: (totalCharactersCount) => {\r\n            dispatch(setTotalCharactersCountActionCreator(totalCharactersCount))\r\n        },\r\n        setFilter: (filter) => {\r\n            dispatch(setFilterActionCreator(filter))\r\n        }\r\n    }\r\n}\r\n\r\nconst MainPageContainer = connect(mapStateToProps, mapDispatchToProps) (MainPageAPIComponent);\r\n\r\nexport default MainPageContainer;","import { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport FavoriteCharactersContainer from './components/FavoriteCharacters/FavoriteCharactersContainer';\nimport Header from './components/Header/Header'\nimport MainPageContainer from './components/MainPage/MainPageContainer';\n\nconst App = (props) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n      <div className=\"App\">\n        <Header />\n        <div className=\"content-wrapper\">\n          <Route exact path='/'\n              render={() => <MainPageContainer />} />\n\n          <Route exact path='/favorites'\n            render={() => <FavoriteCharactersContainer />} />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\r\nimport characterReducer from \"./character-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    favoriteCharacters: characterReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}