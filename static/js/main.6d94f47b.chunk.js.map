{"version":3,"sources":["components/Header/Header.module.css","components/CharacterItem/CharacterItem.module.css","components/MainPage/MainPage.module.css","components/FavoriteCharacters/FavoriteCharacters.module.css","components/MainPage/CharactersSearchForm.module.css","components/CharacterItem/CharacterItem.jsx","redux/character-reducer.js","components/FavoriteCharacters/FavoriteCharacters.jsx","components/FavoriteCharacters/FavoriteCharactersContainer.jsx","components/Header/Header.jsx","components/MainPage/CharactersSearchForm.jsx","components/MainPage/MainPage.jsx","components/MainPage/MainPageAPIComponent.jsx","components/MainPage/MainPageContainer.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["module","exports","CharacterItem","props","className","styles","character_card","character_img","src","imgUrl","character_info","name","favButton","isFavorite","type","onClick","addToFavorite","ADD_TO_FAVORITE","DELETE_FROM_FAVORITE","SET_CHARACTERS","SET_CURRNET_PAGE","SET_TOTAL_CHARACTERS_COUNT","SET_FILTER","initialState","characters","favoriteCharacters","pageSize","totalCharactersCount","currentPage","filter","term","addToFavoriteActionCreator","character","deleteFromFavoriteActionCreator","characterReducer","state","action","stateCopy","FavoriteCharacters","favoriteCharactersElements","map","card","deleteFromFavorite","buttonContainer","character_list","FavoriteCharactersContainer","connect","dispatch","Header","header","menu","exact","to","menuLink","activeClassName","activeLink","—ÅharactersSearchFormValidate","values","CharactersSearchForm","inputForm","initialValues","validate","onSubmit","setSubmitting","onFilterChanged","isSubmitting","placeholder","disabled","MainPage","pagesCount","Math","ceil","pages","i","push","pagination","p","active","onPageChanged","MainPageAPIComponent","pageNumber","setCurrentPage","axios","get","then","response","getUrlCharacter","lastStr","data","results","url","slice","replace","modResponse","newResponse","charactersInPage","length","setCharacters","setFilter","this","setTotalCharactersCount","count","getCharacters","React","Component","MainPageContainer","setCharactersActionCreator","setCurrentPageActionCreator","setTotalCharactersCountActionCreator","setFilterActionCreator","App","basename","process","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6d94f47b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1lhMN\",\"menu\":\"Header_menu__hs1d3\",\"menuLink\":\"Header_menuLink__1xUdx\",\"activeLink\":\"Header_activeLink__2l0IM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character_card\":\"CharacterItem_character_card__1O1BC\",\"character_img\":\"CharacterItem_character_img__3OcFf\",\"character_info\":\"CharacterItem_character_info__3Y7S4\",\"favButton\":\"CharacterItem_favButton__1gs4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character_list\":\"MainPage_character_list__3lK4F\",\"pagination\":\"MainPage_pagination__YZHOH\",\"active\":\"MainPage_active__2Mnqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character_list\":\"FavoriteCharacters_character_list__19krI\",\"character_card\":\"FavoriteCharacters_character_card__WIUYE\",\"character_img\":\"FavoriteCharacters_character_img__1JzHv\",\"character_info\":\"FavoriteCharacters_character_info__1EGCW\",\"buttonContainer\":\"FavoriteCharacters_buttonContainer__1r3WS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"CharactersSearchForm_inputForm__1Chi3\"};","import styles from './CharacterItem.module.css';\r\n\r\nconst CharacterItem = (props) => {\r\n    \r\n    return (\r\n        <div className={styles.character_card}>\r\n            <div>\r\n                <img className={styles.character_img} src={props.imgUrl} />\r\n            </div>\r\n            <div className={styles.character_info}>\r\n                <div>\r\n                    <span>{props.name}</span>\r\n                </div>\r\n                <div className={styles.favButton}>\r\n                    {props.isFavorite ?\r\n                    //     <button onClick={() => { props.deleteFromFavorite() }}>\r\n                    //         –•\r\n                    // </button> \r\n                    <div></div>:\r\n                    <button type='submit'onClick={() => {props.addToFavorite(props.name, props.imgUrl, props.isFavorite)}}>\r\n                            ‚ù§\r\n                    </button>\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterItem;","const ADD_TO_FAVORITE = 'ADD-TO-FAVORITE';\r\nconst DELETE_FROM_FAVORITE = 'DELETE-FROM-FAVORITE';\r\nconst SET_CHARACTERS = 'SET-CHARACTERS';\r\nconst SET_CURRNET_PAGE = 'SET-CURRNET-PAGE';\r\nconst SET_TOTAL_CHARACTERS_COUNT = 'SET_TOTAL_CHARACTERS_COUNT';\r\nconst SET_FILTER = 'SET-FILTER';\r\n\r\nlet initialState = {\r\n    characters: [],\r\n    favoriteCharacters: [\r\n        // { 'name': 'luke', favorite: true },\r\n    ],\r\n    pageSize: 10,\r\n    totalCharactersCount: 0,\r\n    currentPage: 1,\r\n    filter: {\r\n        term: ''\r\n    }\r\n}\r\n\r\nconst characterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_FAVORITE: {\r\n            return {...state, favoriteCharacters: [...state.favoriteCharacters, {name: action.character, imgUrl: action.imgUrl, isFavorite: true}]}\r\n        }\r\n        case DELETE_FROM_FAVORITE: {\r\n            let stateCopy = { ...state };\r\n            stateCopy.favoriteCharacters = [...state.favoriteCharacters]\r\n            // stateCopy.favoriteCharacters.pop();\r\n            stateCopy.favoriteCharacters = [];\r\n            return stateCopy;\r\n        }\r\n        case SET_CHARACTERS:\r\n            return { ...state, characters: action.characters, term: action.term }\r\n        case SET_CURRNET_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_CHARACTERS_COUNT:\r\n            return { ...state, totalCharactersCount: action.totalCharactersCount }\r\n        case SET_FILTER: {\r\n            return {...state, filter: {term: action.filter.term}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addToFavoriteActionCreator = (character, imgUrl, isFavorite) => ({ type: ADD_TO_FAVORITE, character, imgUrl, isFavorite });\r\nexport const deleteFromFavoriteActionCreator = () => ({ type: DELETE_FROM_FAVORITE });\r\nexport const setCharactersActionCreator = (characters) => ({ type: SET_CHARACTERS, characters });\r\nexport const setCurrentPageActionCreator = (currentPage) => ({ type: SET_CURRNET_PAGE, currentPage });\r\nexport const setFilterActionCreator = (filter) => ({ type: SET_FILTER, filter });\r\nexport const setTotalCharactersCountActionCreator = (totalCharactersCount) => ({ type: SET_TOTAL_CHARACTERS_COUNT, totalCharactersCount });\r\n\r\n\r\nexport default characterReducer;","import CharacterItem from '../CharacterItem/CharacterItem';\r\nimport styles from './FavoriteCharacters.module.css';\r\n\r\nconst FavoriteCharacters = (props) => {\r\n    let favoriteCharactersElements = props.favoriteCharacters\r\n        .map(card => <CharacterItem name={card.name} imgUrl={card.imgUrl} isFavorite={card.isFavorite} deleteFromFavorite={props.deleteFromFavorite} />);\r\n\r\n    return (\r\n        <div>\r\n            <h1>–ú–æ–∏ –ª—é–±–∏–º—ã–µ –ø–µ—Ä—Å—ã</h1>\r\n            <div className={styles.buttonContainer}>\r\n                <button onClick={() => { props.deleteFromFavorite() }}>\r\n                    –£–¥–∞–ª–∏—Ç—å –≤—Å–µ—Ö\r\n                </button>\r\n            </div>\r\n\r\n            <div className={styles.character_list}>\r\n                {favoriteCharactersElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoriteCharacters;","import CharacterItem from '../CharacterItem/CharacterItem';\r\nimport { addToFavoriteActionCreator, deleteFromFavoriteActionCreator } from '../../redux/character-reducer';\r\nimport { connect } from 'react-redux';\r\nimport FavoriteCharacters from './FavoriteCharacters';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        favoriteCharacters: state.favoriteCharacters.favoriteCharacters\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToFavorite: () => {\r\n            dispatch(addToFavoriteActionCreator())\r\n        } ,\r\n        deleteFromFavorite: () => {\r\n            dispatch(deleteFromFavoriteActionCreator())\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst FavoriteCharactersContainer = connect(mapStateToProps, mapDispatchToProps) (FavoriteCharacters);\r\n\r\nexport default FavoriteCharactersContainer;","import { NavLink } from 'react-router-dom';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={styles.header}>\r\n            <ul className={styles.menu}>\r\n                {/* <li><a href=\"/main\" className={styles.menuLink}>–ì–ª–∞–≤–Ω–∞—è</a></li> */}\r\n                <li><NavLink exact to=\"/\" className={styles.menuLink} activeClassName={styles.activeLink}>–ì–ª–∞–≤–Ω–∞—è</NavLink></li>\r\n                <li><NavLink to=\"/favorites\" className={styles.menuLink} activeClassName={styles.activeLink}>–õ—é–±–∏–º—ã–µ –≥–µ—Ä–æ–∏</NavLink></li> \r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import { Formik, Form, Field } from 'formik';\r\nimport styles from './CharactersSearchForm.module.css';\r\n\r\nconst —ÅharactersSearchFormValidate = values => {\r\n    const errors = {};\r\n    return errors;\r\n  }\r\n\r\nconst CharactersSearchForm = (props) => {\r\n\r\n  const submit = (values, { setSubmitting }) => {\r\n    props.onFilterChanged(values);\r\n    setSubmitting(false);\r\n  }\r\n\r\n  return <div className={styles.inputForm}>\r\n\r\n    <Formik \r\n      initialValues={{ term: '' }}\r\n      validate={—ÅharactersSearchFormValidate}\r\n      onSubmit={submit}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          <Field type=\"text\" name=\"term\" placeholder='–ù–∞–π—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞'/>\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            –ü–æ–∏—Å–∫\r\n           </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n\r\n  </div>\r\n}\r\n\r\nexport default CharactersSearchForm;","import styles from './MainPage.module.css';\r\nimport CharacterItem from '../CharacterItem/CharacterItem';\r\nimport CharactersSearchForm from './CharactersSearchForm';\r\n\r\nconst MainPage = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalCharactersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n\r\n        <h1>–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –ó–≤–µ–∑–¥–Ω—ã—Ö –í–æ–π–Ω</h1>\r\n        <CharactersSearchForm onFilterChanged={props.onFilterChanged} />\r\n        <div className={styles.pagination}>\r\n            {pages.map(p => {\r\n                return <a className={props.currentPage === p && styles.active}\r\n                    onClick={() => { props.onPageChanged(p) }}>{p}</a>\r\n            })}\r\n        </div>\r\n\r\n        <div className={styles.character_list}>\r\n            {/* {this.charactersElements} */}\r\n            {   props.characters.map(card => <CharacterItem name={card.name} imgUrl={card.imgUrl} addToFavorite={props.addToFavorite}\r\n            isFavorite={props.isFavorite}/>)}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default MainPage;","import axios from 'axios';\r\nimport React from 'react';\r\nimport MainPage from './MainPage';\r\n\r\n\r\nclass MainPageAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.characters.length === 0) {\r\n            axios.get(`https://swapi.dev/api/people/?search=${this.props.term}&page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n                .then(response => {\r\n                    let getUrlCharacter = (i) => {\r\n                        let str = response.data.results[i].url;\r\n                        let re = 'http://swapi.dev/api/people/';\r\n                        let midStr = str.slice(0, -1);\r\n                        let lastStr = midStr.replace(re, 'https://starwars-visualguide.com/assets/img/characters/');\r\n                        let newStr = `${lastStr}.jpg`;\r\n                        return newStr;\r\n                    }\r\n                \r\n                    let newResponse = () => {\r\n                        let newResponse = { ...response }\r\n                        let charactersInPage = newResponse.data.results.length\r\n                        for (let i = 0; i < charactersInPage; i++) {\r\n                            let imgUrl = getUrlCharacter(i);\r\n                            newResponse.data.results[i].imgUrl = imgUrl;\r\n                            newResponse.data.results[i].isFavorite = false;\r\n                        }\r\n                        return newResponse;\r\n                \r\n                    }\r\n                    let modResponse = newResponse();\r\n                    this.props.setCharacters(modResponse.data.results);\r\n                    this.props.setTotalCharactersCount(response.data.count);\r\n                })\r\n        }\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://swapi.dev/api/people/?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                let getUrlCharacter = (i) => {\r\n                    let str = response.data.results[i].url;\r\n                    let re = 'http://swapi.dev/api/people/';\r\n                    let midStr = str.slice(0, -1);\r\n                    let lastStr = midStr.replace(re, 'https://starwars-visualguide.com/assets/img/characters/');\r\n                    let newStr = `${lastStr}.jpg`;\r\n                    return newStr;\r\n                }\r\n            \r\n                let newResponse = () => {\r\n                    let newResponse = { ...response }\r\n                    let charactersInPage = newResponse.data.results.length\r\n                    for (let i = 0; i < charactersInPage; i++) {\r\n                        let imgUrl = getUrlCharacter(i);\r\n                        newResponse.data.results[i].imgUrl = imgUrl\r\n                        newResponse.data.results[i].isFavorite = false;\r\n                    }\r\n                    return newResponse;\r\n            \r\n                }\r\n                let modResponse = newResponse();\r\n                this.props.setCharacters(modResponse.data.results, '');\r\n            })\r\n    }\r\n\r\n    onFilterChanged = (filter) => {\r\n        this.props.setFilter(filter);\r\n        axios.get(`https://swapi.dev/api/people/?search=${this.props.term}&page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                let getUrlCharacter = (i) => {\r\n                    let str = response.data.results[i].url;\r\n                    let re = 'http://swapi.dev/api/people/';\r\n                    let midStr = str.slice(0, -1);\r\n                    let lastStr = midStr.replace(re, 'https://starwars-visualguide.com/assets/img/characters/');\r\n                    let newStr = `${lastStr}.jpg`;\r\n                    return newStr;\r\n                }\r\n            \r\n                let newResponse = () => {\r\n                    let newResponse = { ...response }\r\n                    let charactersInPage = newResponse.data.results.length\r\n                    for (let i = 0; i < charactersInPage; i++) {\r\n                        let imgUrl = getUrlCharacter(i);\r\n                        newResponse.data.results[i].imgUrl = imgUrl\r\n                        newResponse.data.results[i].isFavorite = false;\r\n                    }\r\n                    return newResponse;\r\n                }\r\n\r\n                let modResponse = newResponse();\r\n                this.props.setCharacters(modResponse.data.results);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MainPage\r\n                onPageChanged={this.onPageChanged}\r\n                getCharacters={this.props.getCharacters}\r\n                characters={this.props.characters}\r\n                currentPage={this.props.currentPage}\r\n                totalCharactersCount={this.props.totalCharactersCount}\r\n                pageSize={this.props.pageSize}\r\n                addToFavorite={this.props.addToFavorite}\r\n                deleteFromFavorite={this.props.deleteFromFavorite}\r\n                onFilterChanged={this.onFilterChanged}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPageAPIComponent;","import { connect } from 'react-redux';\r\nimport { addToFavoriteActionCreator, deleteFromFavoriteActionCreator, setCharactersActionCreator, setCurrentPageActionCreator, setTotalCharactersCountActionCreator, setFilterActionCreator } from '../../redux/character-reducer';\r\nimport MainPageAPIComponent from './MainPageAPIComponent';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        characters: state.favoriteCharacters.characters,\r\n        pageSize: state.favoriteCharacters.pageSize,\r\n        totalCharactersCount: state.favoriteCharacters.totalCharactersCount,\r\n        currentPage: state.favoriteCharacters.currentPage,\r\n        isFavorite: state.favoriteCharacters.isFavorite,\r\n        term: state.favoriteCharacters.filter.term\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToFavorite: (name, imgUrl) => {\r\n            dispatch(addToFavoriteActionCreator(name, imgUrl))\r\n        } ,\r\n        deleteFromFavorite: () => {\r\n            dispatch(deleteFromFavoriteActionCreator())\r\n        },\r\n        setCharacters: (characters) => {\r\n            dispatch(setCharactersActionCreator(characters))\r\n        },\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageActionCreator(currentPage))\r\n        },\r\n        setTotalCharactersCount: (totalCharactersCount) => {\r\n            dispatch(setTotalCharactersCountActionCreator(totalCharactersCount))\r\n        },\r\n        setFilter: (filter) => {\r\n            dispatch(setFilterActionCreator(filter))\r\n        }\r\n    }\r\n}\r\n\r\nconst MainPageContainer = connect(mapStateToProps, mapDispatchToProps) (MainPageAPIComponent);\r\n\r\nexport default MainPageContainer;","import { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport FavoriteCharactersContainer from './components/FavoriteCharacters/FavoriteCharactersContainer';\nimport Header from './components/Header/Header'\nimport MainPageContainer from './components/MainPage/MainPageContainer';\n\nconst App = (props) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n      <div className=\"App\">\n        <Header />\n        <div className=\"content-wrapper\">\n          <Route exact path='/'\n              render={() => <MainPageContainer />} />\n\n          <Route exact path='/favorites'\n            render={() => <FavoriteCharactersContainer />} />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\r\nimport characterReducer from \"./character-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    favoriteCharacters: characterReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}